name: CI

on:
  push:
    branches: [master, develop]
  pull_request:
    branches: [master, develop]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  NOMIC_CLEANUP_LEGACY_BUILD: 1

jobs:
  test-base:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2024-02-14
          override: true
      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo
            ./target
          key: ${{ runner.os }}-test-base-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-test-base-
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose --no-default-features --features=full,feat-ibc,testnet

  test-all-features:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2024-02-14
          override: true
      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo
            ./target
          key: ${{ runner.os }}-test-all-features-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-test-all-features-
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose --all-features

  test-bitcoin:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2024-02-14
          override: true
      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo
            ./target
          key: ${{ runner.os }}-test-all-features-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-test-all-features-
      - name: Test
        env:
          RUST_LOG: info
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose --all-features bitcoin -- --ignored

  check-rest:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2024-02-14
          override: true
      - name: Check Rest
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --manifest-path rest/Cargo.toml --verbose

  build-wasm:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2024-02-14
          override: true
      - name: Install
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh
      - name: Build Wasm
        working-directory: ./wasm
        run: wasm-pack -v build --target web

  coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2024-02-14
          components: llvm-tools-preview
          override: true
      - name: Cache
        id: cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo
            ./target
          key: ${{ runner.os }}-coverage-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-coverage-
      - if: ${{ steps.cache.outputs.cache-hit != 'true' }}
        name: Install Coverage Tooling
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-llvm-cov --force
      - name: Run Coverage
        uses: actions-rs/cargo@v1
        with:
          command: llvm-cov
          args: --no-cfg-coverage-nightly --no-default-features --features=full,feat-ibc,testnet --workspace --lcov --output-path lcov.info
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: lcov.info
          fail_ci_if_error: true

  format:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2024-02-14
          components: rustfmt
          override: true
      - name: Check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Nightly
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2024-02-14
          components: clippy
          override: true
      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo
            ./target
          key: ${{ runner.os }}-clippy-${{ hashFiles('Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-clippy-
      - name: Check
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --no-default-features --features=full,feat-ibc,testnet -- -D warnings
